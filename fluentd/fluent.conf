# https://docs.fluentd.org/input/syslog#multi-process-environment
<system>
  workers 3
</system>
###########################
# https://docs.fluentd.org/configuration/config-file
# Receive events from 24224/tcp
# This is used by log forwarding and the fluent-cat command
<source>
  @type forward
  port 24224
</source>
###########################
# https://docs.fluentd.org/input/syslog
<source>
  @type syslog
  port 5140
  bind 0.0.0.0
  tag syslog
</source>
<source>
  @type syslog
  port 5140
  bind 0.0.0.0
  <transport tcp>
  </transport>
  tag syslog
</source>
# https://docs.fluentd.org/how-to-guides/parse-syslog#step-2-extract-syslog-messages-from-sudo
# <filter syslog.**>
#   @type grep
#   <regexp>
#     key ident
#     pattern /^sudo$/
#   </regexp>
#   <regexp>
#     key message
#     pattern /COMMAND/
#   </regexp>
# </filter>
###########################
# https://docs.fluentd.org/input/syslog
<source>
  @type syslog
  tag mikrotik
  port 1514
  bind 0.0.0.0
  <transport tcp>
  </transport>
  # <parse>
  #   @type regexp
  #   expression //i
  # </parse>
</source>
###########################
# https://www.dinotools.de/2015/12/06/logs-mit-fluentd-sammeln-und-auswerten/
<worker 0>
<source>
  @type tail
  path /var/log/syslog
  pos_file /var/log/td-agent/syslog.pos
  tag local.syslog
  format syslog
</source>
</worker>
###########################
# https://github.com/repeatedly/fluent-plugin-beats
<source>
  @type beats
  metadata_as_tag
</source>

# Forward all events from beats to each index on elasticsearch
# <match *beat>
#   @type elasticsearch_dynamic
#   logstash_format true
#   logstash_prefix ${tag_parts[0]}
#   type_name ${record['type']}
# </match>
###########################
# https://github.com/repeatedly/fluent-plugin-netflow
# https://github.com/yvesbd/fluent-plugin-netflowipfix
<worker 0>
<source>
  @type netflowipfix
  tag netflow.event
  bind 0.0.0.0
  port 2055
  cache_ttl 6000
  versions [5, 9]
  #definitions /path/to/custom_fields.yaml
</source>
</worker>

# <match netflow.event>
#   @type flowcounter
#   unit minute
#   count_keys count # missing column for counting events only
#   tag flowcount
# </match>

# <match flowcount>
#   @type stdout
# </match>

# https://github.com/codeout/fluent-plugin-netflow-multiplier
<filter netflow.event>
  @type netflow_multiplier
  default_sampling_rate 10000
</filter>

# <match netflow.event>
#   @type stdout
# </match>

###########################
# https://github.com/mamewotoko/fluent-plugin-ufw
# <worker 0>
# <source>
#  @type tail
#  read_from_head true
#  format ufw
#  path /var/log/ufw/ufw.log
#  pos_file /var/log/ufw/ufw.pos
#  tag ufw.combined
# </source>
# </worker>
############################
# https://github.com/y-ken/fluent-plugin-geoip
<filter access.apache>
  @type geoip

  # Specify one or more geoip lookup field which has ip address (default: host)
  geoip_lookup_keys host

  # Specify optional geoip database (using bundled GeoLiteCity databse by default)
  # geoip_database    "/path/to/your/GeoIPCity.dat"
  # Specify optional geoip2 database
  # geoip2_database   "/path/to/your/GeoLite2-City.mmdb" (using bundled GeoLite2-City.mmdb by default)
  # Specify backend library (geoip2_c, geoip, geoip2_compat)
  backend_library geoip2_c

  # Set adding field with placeholder (more than one settings are required.)
  <record>
    city            ${city.names.en["host"]}
    latitude        ${location.latitude["host"]}
    longitude       ${location.longitude["host"]}
    country         ${country.iso_code["host"]}
    country_name    ${country.names.en["host"]}
    postal_code     ${postal.code["host"]}
  </record>

  # To avoid get stacktrace error with `[null, null]` array for elasticsearch.
  skip_adding_null_record  true

  # Set @log_level (default: warn)
  @log_level         info
</filter>
############################
<filter *.*>
  @type record_transformer
  <record>
    hostname "#{Socket.gethostname}"
    #tag ${tag}
  </record>
</filter>
###########################
# https://docs.fluentd.org/filter/stdout
# DEBUGGING
<filter *.*>
  @type stdout
</filter>
###########################
<label @FLUENT_LOG>
  <match **>
    @type stdout
  </match>
</label>

<match *.*>
  @type file
  path /data/fluent/fluentd.${tag}.%Y%m%d
  compress gzip
  append true
  time_slice_format %Y%m%d
  time_slice_wait 10m
  time_format %Y%m%dT%H%M%S%z
  <buffer tag,time>
    timekey 1d
    timekey_use_utc true
    timekey_wait 10m
  </buffer>
</match>
# <match *.*>
#   @type stdout
# </match>
###########################
